// <auto-generated />
using System;
using DogWalk_Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogWalk_Infrastructure.Migrations
{
    [DbContext(typeof(DogWalkDbContext))]
    [Migration("20250320183059_ConfiguracionInicial")]
    partial class ConfiguracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogWalk_Domain.Entities.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TipoItem")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DetalleFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TipoItem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("FacturaId");

                    b.ToTable("DetallesFactura");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.FotoPerro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerroId")
                        .HasColumnType("int");

                    b.Property<string>("UrlFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PerroId");

                    b.ToTable("FotosPerros");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Disponibilidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ImagenArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.ToTable("ImagenesArticulos");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Opinion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.Property<int>("PerroId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("PerroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValoracionGeneral")
                        .HasColumnType("int");

                    b.Property<double>("ValoracionMedia")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Paseadores");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("GpsUbicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Perros");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Precio", b =>
                {
                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PaseadorId", "ServicioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Ranking", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId", "PaseadorId");

                    b.HasIndex("PaseadorId");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorarioId")
                        .HasColumnType("int");

                    b.Property<int>("PaseadorId")
                        .HasColumnType("int");

                    b.Property<int>("PerroId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HorarioId");

                    b.HasIndex("PaseadorId");

                    b.HasIndex("PerroId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Carrito", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", "Articulo")
                        .WithMany("CarritoItems")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("CarritoItems")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Chat", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Chats")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Chats")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paseador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.DetalleFactura", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", null)
                        .WithMany("DetallesFactura")
                        .HasForeignKey("ArticuloId");

                    b.HasOne("DogWalk_Domain.Entities.Factura", "Factura")
                        .WithMany("Detalles")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Facturas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.FotoPerro", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Fotos")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perro");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Horario", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Horarios")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paseador");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.ImagenArticulo", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Articulo", "Articulo")
                        .WithMany("Imagenes")
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Opinion", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Opiniones")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Opiniones")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Opiniones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Paseador");

                    b.Navigation("Perro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.OwnsOne("DogWalk_Domain.ValueObjects.Dni", "Dni", b1 =>
                        {
                            b1.Property<int>("PaseadorId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("PaseadorId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<int>("PaseadorId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Coordenadas", "Ubicacion", b1 =>
                        {
                            b1.Property<int>("PaseadorId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitud")
                                .HasColumnType("float");

                            b1.Property<double>("Longitud")
                                .HasColumnType("float");

                            b1.HasKey("PaseadorId");

                            b1.ToTable("Paseadores");

                            b1.WithOwner()
                                .HasForeignKey("PaseadorId");
                        });

                    b.Navigation("Dni")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Telefono")
                        .IsRequired();

                    b.Navigation("Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Perros")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Precio", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Precios")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Servicio", "Servicio")
                        .WithMany("Precios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paseador");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Ranking", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Rankings")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Rankings")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paseador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Reserva", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Horario", "Horario")
                        .WithMany("Reservas")
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Paseador", "Paseador")
                        .WithMany("Reservas")
                        .HasForeignKey("PaseadorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Perro", "Perro")
                        .WithMany("Reservas")
                        .HasForeignKey("PerroId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Servicio", "Servicio")
                        .WithMany("Reservas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DogWalk_Domain.Entities.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Paseador");

                    b.Navigation("Perro");

                    b.Navigation("Servicio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.HasOne("DogWalk_Domain.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Dni", "Dni", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("DogWalk_Domain.ValueObjects.Telefono", "Telefono", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Dni")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Telefono")
                        .IsRequired();
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Articulo", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("DetallesFactura");

                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Factura", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Horario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Paseador", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("Horarios");

                    b.Navigation("Opiniones");

                    b.Navigation("Precios");

                    b.Navigation("Rankings");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Perro", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Opiniones");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Servicio", b =>
                {
                    b.Navigation("Precios");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("DogWalk_Domain.Entities.Usuario", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("Chats");

                    b.Navigation("Facturas");

                    b.Navigation("Opiniones");

                    b.Navigation("Perros");

                    b.Navigation("Rankings");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
